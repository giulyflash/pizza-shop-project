<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4" 
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	
	
	
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.root</param-value>
	</context-param>
	
	<!--
	 - Specifies the context location for the root application context of
	 - this web app. The value mentioned here is the default of the
	 - ContextLoaderListener, but for clarity we're including it anyway.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/pizza4S-core.xml
			/WEB-INF/pizza4S-security.xml
			/WEB-INF/pizza4S-data.xml			
			/WEB-INF/pizza4S-service.xml			
		</param-value>
	</context-param>
	
	<!-- 	
	- Note: This listener should be placed before ContextLoaderListener in web.xml, at 
	- least when used for Log4J. Log4jConfigListener sets the system property implicitly, 
	- so there's no need for this listener in addition to it.  
	-->
	<listener>
		<listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
	</listener>
	
	<!--
     - Loads the root application context of this web app at startup,
     - by default from "/WEB-INF/applicationContext.xml" (see above).
     -
     - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
     - to access it anywhere in the web application, outside of the framework.
     - Note that this will only work in Servlet 2.4 environments, or Servlet 2.3
     - environments that follow the 2.4 initializaiton order (most of them).
     - Alternately, ContextLoaderServlet can be used for older environments.
    -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
		
	
		
	<display-name>Pizza shop</display-name>

	<description>Spring MVC pizza shop app</description>
 	<servlet>
		<servlet-name>pizza4S</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>pizza4S</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>pizza4S</servlet-name>
		<url-pattern>*.ajax</url-pattern>
	</servlet-mapping>
	
	
	  <!-- ================== ACEGI FILTERS ================ -->
  <filter>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
    <init-param>
          <param-name>targetClass</param-name>
          <param-value>org.acegisecurity.util.FilterChainProxy</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
	
	
	<welcome-file-list>
		<welcome-file>welcome.htm</welcome-file>
	</welcome-file-list>

</web-app>
